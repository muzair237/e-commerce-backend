module.exports = {
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    tsconfigRootDir: __dirname,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  extends: ['plugin:@typescript-eslint/recommended', 'plugin:prettier/recommended'],
  root: true,
  env: {
    node: true,
    jest: true,
    browser: true,
    es2021: true,
  },
  ignorePatterns: ['.eslintrc.js'],
  rules: {
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/explicit-function-return-type': 'error',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/no-explicit-any': 'error',

    'no-console': 'warn',
    'object-shorthand': ['error', 'always'],
    'linebreak-style': 0,
    'no-underscore-dangle': 'off',
    'no-undef': 'error',
    semi: 'error',
    'semi-spacing': 'error',
    eqeqeq: 'warn',
    'no-invalid-this': 'error',
    'no-return-assign': 'error',
    'no-unused-expressions': ['error', { allowTernary: true }],
    'no-useless-concat': 'error',
    'no-useless-return': 'error',
    'no-constant-condition': 'warn',
    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: 'req|res|next|__' }],
    'no-mixed-spaces-and-tabs': 'warn',
    'space-before-blocks': 'error',
    'space-in-parens': 'error',
    'space-infix-ops': 'error',
    'space-unary-ops': 'error',
    quotes: ['error', 'single'],
    'max-len': ['error', { code: 200 }],
    'prefer-destructuring': ['error', { object: true, array: true }],
    'max-lines': ['error', { max: 500 }],
    'keyword-spacing': 'error',
    'multiline-ternary': ['error', 'never'],
    'no-mixed-operators': 'error',
    'no-multiple-empty-lines': ['error', { max: 2, maxEOF: 1 }],
    'no-whitespace-before-property': 'error',
    'nonblock-statement-body-position': 'error',
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    'arrow-spacing': 'error',
    'no-confusing-arrow': 'error',
    'no-duplicate-imports': 'error',
    'no-var': 'error',
    'prefer-const': 'error',
    'prefer-template': 'warn',
    // Added rules
    '@typescript-eslint/typedef': [
      'warn',
      {
        variableDeclaration: true, // Warns if variables lack explicit types
        parameter: true, // Warns if function parameters lack explicit types
        propertyDeclaration: true, // Warns if properties lack explicit types
        memberVariableDeclaration: true, // Warns if member variables lack explicit types
      },
    ],
  },
};
